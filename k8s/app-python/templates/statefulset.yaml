apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "app-python.fullname" . }}
  labels:
    {{- include "app-python.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: "Parallel"
  {{- end }}
  selector:
    matchLabels:
      {{- include "app-python.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app-python.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app-python.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: install
          image: busybox:1.28
          command:
            - wget
            - "-O"
            - "/work-dir/index.html"
            - http://info.cern.ch
          volumeMounts:
          - name: workdir
            mountPath: "/work-dir"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # env:
          # - name: MY_PASSWORD
          #   valueFrom:
          #     secretKeyRef:
          #       name: credentials
          #       key: password
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            - name: app-volume
              mountPath: "/app-python/config.json"
              readOnly: true
          {{- end}}
      volumes:
        - name: app-volume
          configMap:
            name: app-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- with .Values.volumeClaimTemplates }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.volumes.pers.name }}
      spec:
        {{- toYaml .Values.volumes.pers.spec | nindent 8 }}
  {{- end}}
